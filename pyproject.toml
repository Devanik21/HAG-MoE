[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hag-moe"
version = "0.1.0"
description = "Hierarchical Attention-Gated Mixture of Experts - A New Paradigm for Scalable Intelligence"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "HAG-MoE Research Team", email = "research@hagmoe.ai"},
]
maintainers = [
    {name = "HAG-MoE Research Team", email = "research@hagmoe.ai"},
]
keywords = [
    "artificial-intelligence",
    "deep-learning",
    "mixture-of-experts",
    "transformers",
    "attention-mechanism",
    "hierarchical-models",
    "scalable-ai",
    "natural-language-processing",
    "machine-learning",
    "pytorch"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.20.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
    "tqdm>=4.62.0",
    "wandb>=0.12.0",
    "tensorboard>=2.8.0",
    "pyyaml>=6.0",
    "hydra-core>=1.2.0",
    "omegaconf>=2.2.0",
    "einops>=0.4.0",
    "accelerate>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.2.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.19.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.19.0",
    "nbsphinx>=0.8.0",
    "pandoc>=2.0.0",
    "sphinxcontrib-bibtex>=2.5.0",
    "sphinx-copybutton>=0.5.0",
    "furo>=2023.3.27",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.2.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.70.0",
    "factory-boy>=3.2.0",
    "responses>=0.23.0",
]
benchmark = [
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
    "py-spy>=0.3.14",
    "line-profiler>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "datasets>=2.10.0",
    "evaluate>=0.4.0",
]
research = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.6.0",
    "ipywidgets>=8.0.0",
    "plotly>=5.13.0",
    "bokeh>=3.1.0",
    "networkx>=3.0",
    "scikit-learn>=1.2.0",
    "sympy>=1.11.0",
    "statsmodels>=0.13.0",
]
distributed = [
    "torch-distributed>=0.1.0",
    "deepspeed>=0.9.0",
    "fairscale>=0.4.13",
    "apex",  # NVIDIA Apex for mixed precision
]
deployment = [
    "docker>=6.0.0",
    "kubernetes>=26.1.0",
    "ray[serve]>=2.3.0",
    "triton-client>=2.32.0",
    "onnx>=1.14.0",
    "onnxruntime>=1.14.0",
]

[project.urls]
Homepage = "https://github.com/hagmoe/hag-moe"
Documentation = "https://hag-moe.readthedocs.io"
Repository = "https://github.com/hagmoe/hag-moe"
"Bug Tracker" = "https://github.com/hagmoe/hag-moe/issues"
Changelog = "https://github.com/hagmoe/hag-moe/blob/main/CHANGELOG.md"
"Research Papers" = "https://github.com/hagmoe/hag-moe/tree/main/research/papers"
"Discord Community" = "https://discord.gg/hagmoe"

[project.scripts]
hag-moe-train = "hagmoe.cli.train:main"
hag-moe-eval = "hagmoe.cli.evaluate:main"
hag-moe-generate = "hagmoe.cli.generate:main"
hag-moe-analyze = "hagmoe.cli.analyze:main"
hag-moe-convert = "hagmoe.cli.convert:main"

[project.entry-points."hagmoe.experts"]
micro = "hagmoe.core.experts:MicroExpert"
macro = "hagmoe.core.experts:MacroExpert"
meta = "hagmoe.core.experts:MetaExpert"
custom = "hagmoe.core.experts:CustomExpert"

[project.entry-points."hagmoe.attention"]
standard = "hagmoe.core.attention:StandardAttention"
hierarchical = "hagmoe.core.attention:HierarchicalAttention"
expert_coupled = "hagmoe.core.attention:ExpertCoupledAttention"

[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["hagmoe*"]
exclude = ["tests*", "docs*", "examples*", "benchmarks*"]

[tool.setuptools.package-data]
hagmoe = [
    "configs/*.yaml",
    "configs/**/*.yaml",
    "assets/**/*",
    "py.typed",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["hagmoe", "tests", "scripts", "examples"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "wandb.*",
    "tensorboard.*",
    "matplotlib.*",
    "seaborn.*",
    "scipy.*",
    "einops.*",
    "accelerate.*",
    "datasets.*",
    "evaluate.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=hagmoe",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
    "gpu: marks tests that require GPU",
    "distributed: marks tests that require distributed setup",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["hagmoe"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
    "*/cli/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B018"]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.semantic_release]
version_variable = "hagmoe/__init__.py:__version__"
build_command = "python -m build"
dist_path = "dist/"
upload_to_pypi = false
upload_to_release = true
hvcs = "github"
